-- DROP TABLES --
DROP TABLE SHIP CASCADE CONSTRAINTS PURGE;
DROP TABLE PORTWAREHOUSE CASCADE CONSTRAINTS PURGE;
DROP TABLE CONTAINER CASCADE CONSTRAINTS PURGE;
DROP TABLE CONTINENT CASCADE CONSTRAINTS PURGE;
DROP TABLE COUNTRY CASCADE CONSTRAINTS PURGE;
DROP TABLE DESTINY CASCADE CONSTRAINTS PURGE;
DROP TABLE TRUCK CASCADE CONSTRAINTS PURGE;
DROP TABLE CARGO_MANIFEST CASCADE CONSTRAINTS PURGE;
DROP TABLE TYPE_CARGOMANIFEST CASCADE CONSTRAINTS PURGE;
DROP TABLE SHIP_CONTAINER CASCADE CONSTRAINTS PURGE;
DROP TABLE POSITION CASCADE CONSTRAINTS PURGE;
DROP TABLE POSITIONAL_MESSAGES CASCADE CONSTRAINTS PURGE;
DROP TABLE EMPLOYEE CASCADE CONSTRAINTS PURGE;
DROP TABLE TYPE_EMPLOYEE CASCADE CONSTRAINTS PURGE;
DROP TABLE SHIP_PORTWAREHOUSE CASCADE CONSTRAINTS PURGE;
DROP TABLE CONTAINER_CARGOMANIFEST CASCADE CONSTRAINTS PURGE;


-- CREATE TABLES --
CREATE TABLE SHIP(
    MMSI NUMBER(9) CONSTRAINT pk_MMSI_SHIP PRIMARY KEY,
    IMO NUMBER(7) UNIQUE,
    CALLSIGN VARCHAR(255) UNIQUE,
    VESSEL_TYPE INTEGER,
    NAME VARCHAR(50) CONSTRAINT nn_NAME_SHIP NOT NULL,
    CAPACITY INTEGER,
    DRAFT DECIMAL(5,2),
    WIDTH INTEGER,
    LENGTH INTEGER,
    NUM_GENERATORS INTEGER
);

CREATE TABLE CONTINENT(
    CONTINENT CHAR(50) CONSTRAINT pk_CONTINENT_CONTINENT PRIMARY KEY
);

CREATE TABLE COUNTRY(
    COUNTRY CHAR(50) CONSTRAINT pk_COUNTRY_COUNTRY PRIMARY KEY,
    LATITUDE DECIMAL(4,2) DEFAULT 91.00,
    LONGITUDE DECIMAL(5,2) DEFAULT 181.00,
    CONTINENT CHAR(255),
    FOREIGN KEY (CONTINENT) REFERENCES CONTINENT (CONTINENT),
    CONSTRAINT ck_COUNTRY CHECK ( LATITUDE >= -90.00 AND LATITUDE <= 90.00 AND LONGITUDE >= -180.00 AND LONGITUDE <= 180.00)
);

CREATE TABLE POSITION(
    POSITION_ID INTEGER CONSTRAINT pk_POSITION_ID_POSITION PRIMARY KEY,
    LATITUDE DECIMAL(4,2) DEFAULT 91.00,
    LONGITUDE DECIMAL(5,2) DEFAULT 181.00,
    CONSTRAINT ck_POSTITION CHECK ( LATITUDE >= -90.00 AND LATITUDE <= 90.00 AND LONGITUDE >= -180.00 AND LONGITUDE <= 180.00)
);

CREATE TABLE PORTWAREHOUSE(
    PORTWAREHOUSE_ID INTEGER CONSTRAINT pk_PORTWAREHOUSE_ID_PORTWAREHOUSE PRIMARY KEY,
    NAME VARCHAR(50) CONSTRAINT nn_NAME_PORTWAREHOUSE NOT NULL,
    POSITION_ID INTEGER,
    CONTINENT CHAR(50),
    COUNTRY CHAR(50),
    FOREIGN KEY (POSITION_ID) REFERENCES POSITION (POSITION_ID),
    FOREIGN KEY (CONTINENT) REFERENCES CONTINENT (CONTINENT),
    FOREIGN KEY (COUNTRY) REFERENCES COUNTRY (COUNTRY)
);

CREATE TABLE TRUCK(
    TRUCK_ID INTEGER CONSTRAINT pk_TRUCK_ID_TRUCK PRIMARY KEY,
    LICENSE_PLATE INTEGER,
    PORTWAREHOUSE_ID INTEGER,
    FOREIGN KEY (PORTWAREHOUSE_ID) REFERENCES PORTWAREHOUSE (PORTWAREHOUSE_ID)
);

CREATE TABLE CONTAINER(
    CONTAINER_ID INTEGER CONSTRAINT pk_CONTAINER_ID_CONTAINER PRIMARY KEY,
    PAYLOAD DECIMAL(5,2),
    TARE DECIMAL(5,2),
    GROSS DECIMAL(5,2),
    MMSI NUMBER(9),
    TRUCK_ID INTEGER,
    FOREIGN KEY (MMSI) REFERENCES SHIP (MMSI),
    FOREIGN KEY (TRUCK_ID) REFERENCES TRUCK (TRUCK_ID)
);

CREATE TABLE CARGO_MANIFEST(
    CARGO_CONTAINER_ID INTEGER CONSTRAINT pk_CARGO_CONTAINER_ID_CARGO_MANIFEST PRIMARY KEY,
    POSITION_INVEHICLE INTEGER,
    GROSS_WEIGHT INTEGER
);

CREATE TABLE CONTAINER_CARGOMANIFEST(
    CONTAINER_ID INTEGER,
    CARGO_CONTAINER_ID INTEGER,
    FOREIGN KEY (CONTAINER_ID) REFERENCES CONTAINER (CONTAINER_ID),
    FOREIGN KEY (CARGO_CONTAINER_ID) REFERENCES CARGO_MANIFEST (CARGO_CONTAINER_ID)
);

CREATE TABLE TYPE_CARGOMANIFEST(
    CONTAINER_ID INTEGER
);

CREATE TABLE DESTINY(
    CARGO_CONTAINER_ID INTEGER CONSTRAINT pk_CARGO_CONTAINER_ID_DESTINY PRIMARY KEY,
    PORTWAREHOUSE_ID INTEGER,
    FOREIGN KEY (PORTWAREHOUSE_ID) REFERENCES PORTWAREHOUSE (PORTWAREHOUSE_ID)
);

CREATE TABLE SHIP_CONTAINER(
    CONTAINER_ID INTEGER CONSTRAINT pk_CONTAINER_ID_SHIP_CONTAINER PRIMARY KEY,
    MMSI NUMBER(9),
    FOREIGN KEY (CONTAINER_ID) REFERENCES CONTAINER (CONTAINER_ID),
    FOREIGN KEY (MMSI) REFERENCES SHIP (MMSI)
);

CREATE TABLE POSITIONAL_MESSAGES(
    BASEDATETIME DATE CONSTRAINT pk_BASEDATETIME_POSITIONAL_MESSAGES PRIMARY KEY,
    SOG DECIMAL(5,2),
    COG DECIMAL(5,2),
    HEADING INTEGER DEFAULT 511,
    TRANSCIEVER_CLASS CHAR(1),
    MMSI NUMBER(9), 
    POSITION_ID INTEGER,
    FOREIGN KEY (MMSI) REFERENCES SHIP (MMSI),
    FOREIGN KEY (POSITION_ID) REFERENCES POSITION (POSITION_ID),
    CONSTRAINT ck_POSITIONAL_MESSAGES CHECK ( HEADING >= 0 AND HEADING <= 359 AND COG >= 0 AND COG <= 359)
);

CREATE TABLE EMPLOYEE(
    EMPLOYEE_ID INTEGER CONSTRAINT pk_EMPLOYEE_ID_EMPLOYEE PRIMARY KEY,
    NAME CHAR(50) CONSTRAINT nn_NAME_EMPLOYEE NOT NULL,
    CARGO_CONTAINER_ID INTEGER,
    PORTWAREHOUSE_ID INTEGER,
    FOREIGN KEY (CARGO_CONTAINER_ID) REFERENCES CARGO_MANIFEST (CARGO_CONTAINER_ID),
    FOREIGN KEY (PORTWAREHOUSE_ID) REFERENCES PORTWAREHOUSE (PORTWAREHOUSE_ID)
);

CREATE TABLE TYPE_EMPLOYEE(
    TYPE_EMPLOYEE_ID INTEGER CONSTRAINT pk_TYPE_EMPLOYEE_ID_TYPE_EMPLOYEE PRIMARY KEY,
    DESIGNATION VARCHAR(50),
    SALARY FLOAT(10) DEFAULT 0,
    EMPLOYEE_ID INTEGER,
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID)
);

CREATE TABLE SHIP_PORTWAREHOUSE(
    MMSI INTEGER,
    PORTWAREHOUSE_ID INTEGER,
    FOREIGN KEY (MMSI) REFERENCES SHIP (MMSI),
    FOREIGN KEY (PORTWAREHOUSE_ID) REFERENCES PORTWAREHOUSE (PORTWAREHOUSE_ID)
);


--INSERTS

--CONSTRAINT-PRIMARY KEY
INSERT INTO SHIP (MMSI, IMO, CALLSIGN, VESSEL_TYPE, NAME, CAPACITY, DRAFT, WIDTH, LENGTH ,NUM_GENERATORS )
VALUES ('123456789', '1234567', '12345', '1', 'SHIP', '20', '1,20', '50', '30', '2');

INSERT INTO SHIP (MMSI, IMO, CALLSIGN, VESSEL_TYPE, NAME, CAPACITY, DRAFT, WIDTH, LENGTH ,NUM_GENERATORS )
VALUES ('123456789', '2345678', '23456', '1', 'SHIP', '20', '1,20', '50', '30', '2');

--CONSTRAINT-UNIQUE

INSERT INTO SHIP (MMSI, IMO, CALLSIGN, VESSEL_TYPE, NAME, CAPACITY, DRAFT, WIDTH, LENGTH ,NUM_GENERATORS )
VALUES ('345678912', '4537281', '63748', '1', 'SHIP', '20', '1,20', '50', '30', '2');

INSERT INTO SHIP (MMSI, IMO, CALLSIGN, VESSEL_TYPE, NAME, CAPACITY, DRAFT, WIDTH, LENGTH ,NUM_GENERATORS )
VALUES ('456789123', '4537281', '63748', '1', 'SHIP', '20', '1,20', '50', '30', '2');

--CONSTRAINT-NOT NULL
INSERT INTO EMPLOYEE (EMPLOYEE_ID, NAME, CARGO_CONTAINER_ID, PORTWAREHOUSE_ID)
VALUES ('12345', '', '12345', '12345');

--CONSTRAINT-CHECK
INSERT INTO POSITIONAL_MESSAGES (BASEDATETIME, SOG, COG, HEADING, TRANSCIEVER_CLASS, MMSI, POSITION_ID)
VALUES ('2021-01-01', '12,3', '23,4', '360', 'A', '123456789', '123');



/* O modelo de dados relacional é um tipo de base de dados que armazena e fornece acesso a pontos de dados relacionados entre si. 
Base de dados relacionais são baseados no modelo relacional, uma maneira intuitiva e direta de representar dados em tabelas.
Por essa mesma razão achamos ser o modelo apropriado ao desenvolvimento deste projeto.*/

